<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bkit.fatdown.mappers.TbUserLifeStyleMapper">
  <resultMap id="BaseResultMap" type="com.bkit.fatdown.entity.TbUserLifeStyle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="labour_intensity" jdbcType="INTEGER" property="labourIntensity" />
    <result column="dietary_habit" jdbcType="DOUBLE" property="dietaryHabit" />
    <result column="food_taste" jdbcType="INTEGER" property="foodTaste" />
    <result column="spicy_degree" jdbcType="INTEGER" property="spicyDegree" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, labour_intensity, dietary_habit, food_taste, spicy_degree, user_type, 
    gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.bkit.fatdown.entity.TbUserLifeStyleExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user_life_style
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_user_life_style
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_user_life_style
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bkit.fatdown.entity.TbUserLifeStyleExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_user_life_style
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bkit.fatdown.entity.TbUserLifeStyle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_user_life_style (id, user_id, labour_intensity, 
      dietary_habit, food_taste, spicy_degree, 
      user_type, gmt_create, gmt_modified
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{labourIntensity,jdbcType=INTEGER}, 
      #{dietaryHabit,jdbcType=DOUBLE}, #{foodTaste,jdbcType=INTEGER}, #{spicyDegree,jdbcType=INTEGER}, 
      #{userType,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bkit.fatdown.entity.TbUserLifeStyle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_user_life_style
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="labourIntensity != null">
        labour_intensity,
      </if>
      <if test="dietaryHabit != null">
        dietary_habit,
      </if>
      <if test="foodTaste != null">
        food_taste,
      </if>
      <if test="spicyDegree != null">
        spicy_degree,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="labourIntensity != null">
        #{labourIntensity,jdbcType=INTEGER},
      </if>
      <if test="dietaryHabit != null">
        #{dietaryHabit,jdbcType=DOUBLE},
      </if>
      <if test="foodTaste != null">
        #{foodTaste,jdbcType=INTEGER},
      </if>
      <if test="spicyDegree != null">
        #{spicyDegree,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bkit.fatdown.entity.TbUserLifeStyleExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tb_user_life_style
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_life_style
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.labourIntensity != null">
        labour_intensity = #{record.labourIntensity,jdbcType=INTEGER},
      </if>
      <if test="record.dietaryHabit != null">
        dietary_habit = #{record.dietaryHabit,jdbcType=DOUBLE},
      </if>
      <if test="record.foodTaste != null">
        food_taste = #{record.foodTaste,jdbcType=INTEGER},
      </if>
      <if test="record.spicyDegree != null">
        spicy_degree = #{record.spicyDegree,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_life_style
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      labour_intensity = #{record.labourIntensity,jdbcType=INTEGER},
      dietary_habit = #{record.dietaryHabit,jdbcType=DOUBLE},
      food_taste = #{record.foodTaste,jdbcType=INTEGER},
      spicy_degree = #{record.spicyDegree,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bkit.fatdown.entity.TbUserLifeStyle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_life_style
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="labourIntensity != null">
        labour_intensity = #{labourIntensity,jdbcType=INTEGER},
      </if>
      <if test="dietaryHabit != null">
        dietary_habit = #{dietaryHabit,jdbcType=DOUBLE},
      </if>
      <if test="foodTaste != null">
        food_taste = #{foodTaste,jdbcType=INTEGER},
      </if>
      <if test="spicyDegree != null">
        spicy_degree = #{spicyDegree,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bkit.fatdown.entity.TbUserLifeStyle">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_life_style
    set user_id = #{userId,jdbcType=INTEGER},
      labour_intensity = #{labourIntensity,jdbcType=INTEGER},
      dietary_habit = #{dietaryHabit,jdbcType=DOUBLE},
      food_taste = #{foodTaste,jdbcType=INTEGER},
      spicy_degree = #{spicyDegree,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>