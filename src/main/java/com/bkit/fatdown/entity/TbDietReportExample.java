package com.bkit.fatdown.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TbDietReportExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public TbDietReportExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andEnergyIsNull() {
            addCriterion("energy is null");
            return (Criteria) this;
        }

        public Criteria andEnergyIsNotNull() {
            addCriterion("energy is not null");
            return (Criteria) this;
        }

        public Criteria andEnergyEqualTo(Double value) {
            addCriterion("energy =", value, "energy");
            return (Criteria) this;
        }

        public Criteria andEnergyNotEqualTo(Double value) {
            addCriterion("energy <>", value, "energy");
            return (Criteria) this;
        }

        public Criteria andEnergyGreaterThan(Double value) {
            addCriterion("energy >", value, "energy");
            return (Criteria) this;
        }

        public Criteria andEnergyGreaterThanOrEqualTo(Double value) {
            addCriterion("energy >=", value, "energy");
            return (Criteria) this;
        }

        public Criteria andEnergyLessThan(Double value) {
            addCriterion("energy <", value, "energy");
            return (Criteria) this;
        }

        public Criteria andEnergyLessThanOrEqualTo(Double value) {
            addCriterion("energy <=", value, "energy");
            return (Criteria) this;
        }

        public Criteria andEnergyIn(List<Double> values) {
            addCriterion("energy in", values, "energy");
            return (Criteria) this;
        }

        public Criteria andEnergyNotIn(List<Double> values) {
            addCriterion("energy not in", values, "energy");
            return (Criteria) this;
        }

        public Criteria andEnergyBetween(Double value1, Double value2) {
            addCriterion("energy between", value1, value2, "energy");
            return (Criteria) this;
        }

        public Criteria andEnergyNotBetween(Double value1, Double value2) {
            addCriterion("energy not between", value1, value2, "energy");
            return (Criteria) this;
        }

        public Criteria andColIsNull() {
            addCriterion("col is null");
            return (Criteria) this;
        }

        public Criteria andColIsNotNull() {
            addCriterion("col is not null");
            return (Criteria) this;
        }

        public Criteria andColEqualTo(Double value) {
            addCriterion("col =", value, "col");
            return (Criteria) this;
        }

        public Criteria andColNotEqualTo(Double value) {
            addCriterion("col <>", value, "col");
            return (Criteria) this;
        }

        public Criteria andColGreaterThan(Double value) {
            addCriterion("col >", value, "col");
            return (Criteria) this;
        }

        public Criteria andColGreaterThanOrEqualTo(Double value) {
            addCriterion("col >=", value, "col");
            return (Criteria) this;
        }

        public Criteria andColLessThan(Double value) {
            addCriterion("col <", value, "col");
            return (Criteria) this;
        }

        public Criteria andColLessThanOrEqualTo(Double value) {
            addCriterion("col <=", value, "col");
            return (Criteria) this;
        }

        public Criteria andColIn(List<Double> values) {
            addCriterion("col in", values, "col");
            return (Criteria) this;
        }

        public Criteria andColNotIn(List<Double> values) {
            addCriterion("col not in", values, "col");
            return (Criteria) this;
        }

        public Criteria andColBetween(Double value1, Double value2) {
            addCriterion("col between", value1, value2, "col");
            return (Criteria) this;
        }

        public Criteria andColNotBetween(Double value1, Double value2) {
            addCriterion("col not between", value1, value2, "col");
            return (Criteria) this;
        }

        public Criteria andProteinIsNull() {
            addCriterion("protein is null");
            return (Criteria) this;
        }

        public Criteria andProteinIsNotNull() {
            addCriterion("protein is not null");
            return (Criteria) this;
        }

        public Criteria andProteinEqualTo(Double value) {
            addCriterion("protein =", value, "protein");
            return (Criteria) this;
        }

        public Criteria andProteinNotEqualTo(Double value) {
            addCriterion("protein <>", value, "protein");
            return (Criteria) this;
        }

        public Criteria andProteinGreaterThan(Double value) {
            addCriterion("protein >", value, "protein");
            return (Criteria) this;
        }

        public Criteria andProteinGreaterThanOrEqualTo(Double value) {
            addCriterion("protein >=", value, "protein");
            return (Criteria) this;
        }

        public Criteria andProteinLessThan(Double value) {
            addCriterion("protein <", value, "protein");
            return (Criteria) this;
        }

        public Criteria andProteinLessThanOrEqualTo(Double value) {
            addCriterion("protein <=", value, "protein");
            return (Criteria) this;
        }

        public Criteria andProteinIn(List<Double> values) {
            addCriterion("protein in", values, "protein");
            return (Criteria) this;
        }

        public Criteria andProteinNotIn(List<Double> values) {
            addCriterion("protein not in", values, "protein");
            return (Criteria) this;
        }

        public Criteria andProteinBetween(Double value1, Double value2) {
            addCriterion("protein between", value1, value2, "protein");
            return (Criteria) this;
        }

        public Criteria andProteinNotBetween(Double value1, Double value2) {
            addCriterion("protein not between", value1, value2, "protein");
            return (Criteria) this;
        }

        public Criteria andFatIsNull() {
            addCriterion("fat is null");
            return (Criteria) this;
        }

        public Criteria andFatIsNotNull() {
            addCriterion("fat is not null");
            return (Criteria) this;
        }

        public Criteria andFatEqualTo(Double value) {
            addCriterion("fat =", value, "fat");
            return (Criteria) this;
        }

        public Criteria andFatNotEqualTo(Double value) {
            addCriterion("fat <>", value, "fat");
            return (Criteria) this;
        }

        public Criteria andFatGreaterThan(Double value) {
            addCriterion("fat >", value, "fat");
            return (Criteria) this;
        }

        public Criteria andFatGreaterThanOrEqualTo(Double value) {
            addCriterion("fat >=", value, "fat");
            return (Criteria) this;
        }

        public Criteria andFatLessThan(Double value) {
            addCriterion("fat <", value, "fat");
            return (Criteria) this;
        }

        public Criteria andFatLessThanOrEqualTo(Double value) {
            addCriterion("fat <=", value, "fat");
            return (Criteria) this;
        }

        public Criteria andFatIn(List<Double> values) {
            addCriterion("fat in", values, "fat");
            return (Criteria) this;
        }

        public Criteria andFatNotIn(List<Double> values) {
            addCriterion("fat not in", values, "fat");
            return (Criteria) this;
        }

        public Criteria andFatBetween(Double value1, Double value2) {
            addCriterion("fat between", value1, value2, "fat");
            return (Criteria) this;
        }

        public Criteria andFatNotBetween(Double value1, Double value2) {
            addCriterion("fat not between", value1, value2, "fat");
            return (Criteria) this;
        }

        public Criteria andFibrinIsNull() {
            addCriterion("fibrin is null");
            return (Criteria) this;
        }

        public Criteria andFibrinIsNotNull() {
            addCriterion("fibrin is not null");
            return (Criteria) this;
        }

        public Criteria andFibrinEqualTo(Double value) {
            addCriterion("fibrin =", value, "fibrin");
            return (Criteria) this;
        }

        public Criteria andFibrinNotEqualTo(Double value) {
            addCriterion("fibrin <>", value, "fibrin");
            return (Criteria) this;
        }

        public Criteria andFibrinGreaterThan(Double value) {
            addCriterion("fibrin >", value, "fibrin");
            return (Criteria) this;
        }

        public Criteria andFibrinGreaterThanOrEqualTo(Double value) {
            addCriterion("fibrin >=", value, "fibrin");
            return (Criteria) this;
        }

        public Criteria andFibrinLessThan(Double value) {
            addCriterion("fibrin <", value, "fibrin");
            return (Criteria) this;
        }

        public Criteria andFibrinLessThanOrEqualTo(Double value) {
            addCriterion("fibrin <=", value, "fibrin");
            return (Criteria) this;
        }

        public Criteria andFibrinIn(List<Double> values) {
            addCriterion("fibrin in", values, "fibrin");
            return (Criteria) this;
        }

        public Criteria andFibrinNotIn(List<Double> values) {
            addCriterion("fibrin not in", values, "fibrin");
            return (Criteria) this;
        }

        public Criteria andFibrinBetween(Double value1, Double value2) {
            addCriterion("fibrin between", value1, value2, "fibrin");
            return (Criteria) this;
        }

        public Criteria andFibrinNotBetween(Double value1, Double value2) {
            addCriterion("fibrin not between", value1, value2, "fibrin");
            return (Criteria) this;
        }

        public Criteria andProteinTotalIsNull() {
            addCriterion("protein_total is null");
            return (Criteria) this;
        }

        public Criteria andProteinTotalIsNotNull() {
            addCriterion("protein_total is not null");
            return (Criteria) this;
        }

        public Criteria andProteinTotalEqualTo(Integer value) {
            addCriterion("protein_total =", value, "proteinTotal");
            return (Criteria) this;
        }

        public Criteria andProteinTotalNotEqualTo(Integer value) {
            addCriterion("protein_total <>", value, "proteinTotal");
            return (Criteria) this;
        }

        public Criteria andProteinTotalGreaterThan(Integer value) {
            addCriterion("protein_total >", value, "proteinTotal");
            return (Criteria) this;
        }

        public Criteria andProteinTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("protein_total >=", value, "proteinTotal");
            return (Criteria) this;
        }

        public Criteria andProteinTotalLessThan(Integer value) {
            addCriterion("protein_total <", value, "proteinTotal");
            return (Criteria) this;
        }

        public Criteria andProteinTotalLessThanOrEqualTo(Integer value) {
            addCriterion("protein_total <=", value, "proteinTotal");
            return (Criteria) this;
        }

        public Criteria andProteinTotalIn(List<Integer> values) {
            addCriterion("protein_total in", values, "proteinTotal");
            return (Criteria) this;
        }

        public Criteria andProteinTotalNotIn(List<Integer> values) {
            addCriterion("protein_total not in", values, "proteinTotal");
            return (Criteria) this;
        }

        public Criteria andProteinTotalBetween(Integer value1, Integer value2) {
            addCriterion("protein_total between", value1, value2, "proteinTotal");
            return (Criteria) this;
        }

        public Criteria andProteinTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("protein_total not between", value1, value2, "proteinTotal");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalIsNull() {
            addCriterion("staple_food_total is null");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalIsNotNull() {
            addCriterion("staple_food_total is not null");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalEqualTo(Integer value) {
            addCriterion("staple_food_total =", value, "stapleFoodTotal");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalNotEqualTo(Integer value) {
            addCriterion("staple_food_total <>", value, "stapleFoodTotal");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalGreaterThan(Integer value) {
            addCriterion("staple_food_total >", value, "stapleFoodTotal");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("staple_food_total >=", value, "stapleFoodTotal");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalLessThan(Integer value) {
            addCriterion("staple_food_total <", value, "stapleFoodTotal");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalLessThanOrEqualTo(Integer value) {
            addCriterion("staple_food_total <=", value, "stapleFoodTotal");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalIn(List<Integer> values) {
            addCriterion("staple_food_total in", values, "stapleFoodTotal");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalNotIn(List<Integer> values) {
            addCriterion("staple_food_total not in", values, "stapleFoodTotal");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalBetween(Integer value1, Integer value2) {
            addCriterion("staple_food_total between", value1, value2, "stapleFoodTotal");
            return (Criteria) this;
        }

        public Criteria andStapleFoodTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("staple_food_total not between", value1, value2, "stapleFoodTotal");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalIsNull() {
            addCriterion("fruit_vegetable_total is null");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalIsNotNull() {
            addCriterion("fruit_vegetable_total is not null");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalEqualTo(Integer value) {
            addCriterion("fruit_vegetable_total =", value, "fruitVegetableTotal");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalNotEqualTo(Integer value) {
            addCriterion("fruit_vegetable_total <>", value, "fruitVegetableTotal");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalGreaterThan(Integer value) {
            addCriterion("fruit_vegetable_total >", value, "fruitVegetableTotal");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("fruit_vegetable_total >=", value, "fruitVegetableTotal");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalLessThan(Integer value) {
            addCriterion("fruit_vegetable_total <", value, "fruitVegetableTotal");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalLessThanOrEqualTo(Integer value) {
            addCriterion("fruit_vegetable_total <=", value, "fruitVegetableTotal");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalIn(List<Integer> values) {
            addCriterion("fruit_vegetable_total in", values, "fruitVegetableTotal");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalNotIn(List<Integer> values) {
            addCriterion("fruit_vegetable_total not in", values, "fruitVegetableTotal");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalBetween(Integer value1, Integer value2) {
            addCriterion("fruit_vegetable_total between", value1, value2, "fruitVegetableTotal");
            return (Criteria) this;
        }

        public Criteria andFruitVegetableTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("fruit_vegetable_total not between", value1, value2, "fruitVegetableTotal");
            return (Criteria) this;
        }

        public Criteria andNutTotalIsNull() {
            addCriterion("nut_total is null");
            return (Criteria) this;
        }

        public Criteria andNutTotalIsNotNull() {
            addCriterion("nut_total is not null");
            return (Criteria) this;
        }

        public Criteria andNutTotalEqualTo(Integer value) {
            addCriterion("nut_total =", value, "nutTotal");
            return (Criteria) this;
        }

        public Criteria andNutTotalNotEqualTo(Integer value) {
            addCriterion("nut_total <>", value, "nutTotal");
            return (Criteria) this;
        }

        public Criteria andNutTotalGreaterThan(Integer value) {
            addCriterion("nut_total >", value, "nutTotal");
            return (Criteria) this;
        }

        public Criteria andNutTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("nut_total >=", value, "nutTotal");
            return (Criteria) this;
        }

        public Criteria andNutTotalLessThan(Integer value) {
            addCriterion("nut_total <", value, "nutTotal");
            return (Criteria) this;
        }

        public Criteria andNutTotalLessThanOrEqualTo(Integer value) {
            addCriterion("nut_total <=", value, "nutTotal");
            return (Criteria) this;
        }

        public Criteria andNutTotalIn(List<Integer> values) {
            addCriterion("nut_total in", values, "nutTotal");
            return (Criteria) this;
        }

        public Criteria andNutTotalNotIn(List<Integer> values) {
            addCriterion("nut_total not in", values, "nutTotal");
            return (Criteria) this;
        }

        public Criteria andNutTotalBetween(Integer value1, Integer value2) {
            addCriterion("nut_total between", value1, value2, "nutTotal");
            return (Criteria) this;
        }

        public Criteria andNutTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("nut_total not between", value1, value2, "nutTotal");
            return (Criteria) this;
        }

        public Criteria andBeansTotalIsNull() {
            addCriterion("beans_total is null");
            return (Criteria) this;
        }

        public Criteria andBeansTotalIsNotNull() {
            addCriterion("beans_total is not null");
            return (Criteria) this;
        }

        public Criteria andBeansTotalEqualTo(Integer value) {
            addCriterion("beans_total =", value, "beansTotal");
            return (Criteria) this;
        }

        public Criteria andBeansTotalNotEqualTo(Integer value) {
            addCriterion("beans_total <>", value, "beansTotal");
            return (Criteria) this;
        }

        public Criteria andBeansTotalGreaterThan(Integer value) {
            addCriterion("beans_total >", value, "beansTotal");
            return (Criteria) this;
        }

        public Criteria andBeansTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("beans_total >=", value, "beansTotal");
            return (Criteria) this;
        }

        public Criteria andBeansTotalLessThan(Integer value) {
            addCriterion("beans_total <", value, "beansTotal");
            return (Criteria) this;
        }

        public Criteria andBeansTotalLessThanOrEqualTo(Integer value) {
            addCriterion("beans_total <=", value, "beansTotal");
            return (Criteria) this;
        }

        public Criteria andBeansTotalIn(List<Integer> values) {
            addCriterion("beans_total in", values, "beansTotal");
            return (Criteria) this;
        }

        public Criteria andBeansTotalNotIn(List<Integer> values) {
            addCriterion("beans_total not in", values, "beansTotal");
            return (Criteria) this;
        }

        public Criteria andBeansTotalBetween(Integer value1, Integer value2) {
            addCriterion("beans_total between", value1, value2, "beansTotal");
            return (Criteria) this;
        }

        public Criteria andBeansTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("beans_total not between", value1, value2, "beansTotal");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_diet_report
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_diet_report
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}